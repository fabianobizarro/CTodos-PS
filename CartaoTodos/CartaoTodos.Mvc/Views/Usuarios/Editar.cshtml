@model CartaoTodos.Mvc.Models.CadastroUsuarioViewModel
@{
    ViewBag.Title = "Novo";
}
<h3>Editar usuário</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(p => p.Usuario.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Usuario.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Usuario.Nome, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Usuario.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Usuario.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Usuario.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Usuario.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Usuario.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Usuario.Login, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Usuario.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Usuario.Senha, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Usuario.Senha, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            <label class="control-label col-md-2">Perfis disponíveis</label>
            <div class="col-md-10">
                @Html.DropDownListFor(p => p.PerfisUsuario, Model.SelectListPerfis(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PerfisUsuario, "", new { @class = "text-danger" })
                <br />
                <button type="button" id="adicionarPerfil" class="btn btn-default">Adicionar</button>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Perfis vinculados</label>
            <div class="col-md-10">
                <ul id="li-perfis">
                    @if (Model.Usuario.Perfis != null)
                    {
                        foreach (var perfil in Model.Usuario.Perfis)
                        {
                            <li>
                                <text class="perfil-vinculado"> @perfil.Nome </text>
                                <button type="button" class="btn btn-link removerPerfil" data-id="@perfil.Id" data-nome="@perfil.Nome">Remover</button>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Alterar" class="btn btn-warning" />
                @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            var IdUsuario = $("#@Html.IdFor(p => p.Usuario.Id)");

            $("#adicionarPerfil").click(function () {
                var perfilSelecionado = $("#PerfisUsuario option:selected");
                var id = perfilSelecionado.val();
                var nome = perfilSelecionado.text();
                var perfilJaVinculado = false;

                $('.perfil-vinculado').each(function (i, e) {
                    if ($(e).html().trim() == nome) {
                        perfilJaVinculado = true;
                    }
                });

                if (perfilJaVinculado)
                    alert('Este perfil já está vinculado ao candidato');
                else {
                    vincularPerfil(IdUsuario.val(), id, function (err) {

                        if (err) {
                            alert('Não foi possível vincular o perfil ao candidato.');
                            console.error(err);
                        }
                        else {
                            $("#li-perfis").append($('<li> \
                                <text class="perfil-vinculado"> '  + nome + ' </text> \
                                <button type="button" class="btn btn-link removerPerfil" data-id="' + id + '" data-nome="' + nome + '">Remover</button> \
                            </li>'));
                        }

                    });
                }
            });

            $('#li-perfis').on('click', 'button', function () {

                
                var self = this;

                var perfilId = this.getAttribute('data-id');
                removerPerfil(IdUsuario.val(), perfilId, function (err, result) {
                    if (err) {
                        alert('Não foi possível desvincular este perfil do usuário');
                        console.error(err);
                    }
                    else {
                        $(self).parent().remove();
                    }
                });
            });

            function vincularPerfil(usuarioId, perfilId, callback) {
                $.post("@Url.Action("AdicionarPerfil", "Usuarios")", { usuarioId: usuarioId, perfilId: perfilId },
                    function (result) {
                        callback(null, result);
                    })
                    .error(function (err) {
                        callback(err);
                    });
            }

            function removerPerfil(usuarioId, perfilId, callback) {
                $.post("@Url.Action("RemoverPerfil", "Usuarios")", { usuarioId: usuarioId, perfilId: perfilId },
                    function (result) {
                        callback(null, result);
                    })
                    .error(function (err) {
                        callback(err);
                    });
            }

        });
    </script>
}
